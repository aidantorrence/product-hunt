import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { GetStaticProps } from "next";
import { PrismaClient } from "@prisma/client";
import { Post, Props } from "../interfaces";
import productHuntFetch from "../requests/productHuntFetch";

export const getStaticProps: GetStaticProps = async () => {
	//product hunt fetch
  const productHuntPosts = await productHuntFetch();

	//prisma mongoDb fetch
	const prisma = new PrismaClient();
	const snippet = await prisma.codesnippets.findMany();

	const serializedSnippets = snippet.map((codeSnippet) => {
		return {
			...codeSnippet,
			createdAt: codeSnippet?.createdAt.toISOString(),
		};
	});

	return {
		props: { productHuntPosts, serializedSnippets },
	};
};

const Home: NextPage<Props> = ({ productHuntPosts }) => {
	const posts: Post[] = productHuntPosts.posts.edges.map((edge: { node: Post[] }) => edge.node);
	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className="flex flex-row items-center justify-center">
				<div className="">
					<div className=" text-center">Votes</div>
					{posts.map((post) => (
						<div className=" text-center" key={post.id}>
							{post.votesCount}
						</div>
					))}
				</div>
				<div className=" pl-8">
					<div className=" text-center">Tagline</div>
					{posts.map((post) => (
						<div key={post.id}>{post.tagline}</div>
					))}
				</div>
			</div>
			<Link href="/twitter">
				<a>Twitter List</a>
			</Link>
			{/* <ReactTable posts={posts} /> */}
		</>
	);
};

export default Home;
